<?xml version="1.0" encoding="utf-8"?>

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
	android:versionCode="1"
	android:versionName="1.0"
	android:installLocation="internalOnly">

	<application android:icon="@drawable/sf__icon"
	    android:label="@string/app_name"
		android:name="com.salesforce.samples.mobilesyncexplorer.MobileSyncExplorerApp"
		android:manageSpaceActivity="com.salesforce.androidsdk.ui.ManageSpaceActivity"
		android:enableOnBackInvokedCallback="true">

		<!-- Launcher screen -->
		<activity android:name="com.salesforce.samples.mobilesyncexplorer.ui.MainActivity"
		    android:label="@string/app_name"
			android:theme="@style/SalesforceSDK"
            android:exported="true">

			<intent-filter>
				<action android:name="android.intent.action.MAIN" />
				<category android:name="android.intent.category.LAUNCHER" />
			</intent-filter>
		</activity>

        <!-- Login activity -->
        <!--
            Launch mode of "singleInstance" ensures that the activity isn't restarted
            by a callback from Chrome custom tab when auth flow is complete. This is
            required for the Chrome custom tab auth flow to work correctly.
        -->
        <!--
            To enable browser based authentication, uncomment the lines below and replace
            'scheme', 'host' and 'path' with their corresponding values from your connected app.

            For example, if the callback URL of your connected app is
            "testsfdc:///mobilesdk/detect/oauth/done",
            'scheme' would be "testsfdc", 'host' would be "*" since it doesn't exist, and
            'path' would be "/mobilesdk/detect/oauth/done".

            If the callback URL is "sfdc://login.salesforce.com/oauth/done",
            'scheme' would be "sfdc", 'host' would be "login.salesforce.com",
            and 'path' would be "/oauth/done".
        -->
        <!--
        <activity android:name="com.salesforce.androidsdk.ui.LoginActivity"
            android:theme="@style/SalesforceSDK"
            android:launchMode="singleInstance"
            android:exported="true">

            <intent-filter>
                <data android:scheme="testsfdc"
                    android:host="*"
                    android:path="/mobilesdk/detect/oauth/done" />
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        -->

		<!-- Detail screen -->
        <activity android:name="com.salesforce.samples.mobilesyncexplorer.ui.DetailActivity"
            android:theme="@style/SalesforceSDK"
            android:exported="false">
            <intent-filter>
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <!-- Contact sync service -->
        <service android:name="com.salesforce.samples.mobilesyncexplorer.sync.ContactSyncService"
            android:exported="true"
            android:process=":sync">
            <intent-filter>
                <action android:name="android.content.SyncAdapter"/>
            </intent-filter>
            <meta-data android:name="android.content.SyncAdapter"
                android:resource="@xml/contact_sync_adapter" />
        </service>

        <!-- Contact data provider -->
        <provider android:name="com.salesforce.samples.mobilesyncexplorer.sync.ContactProvider"
            android:authorities="com.salesforce.samples.mobilesyncexplorer.sync.contactsyncadapter"
            android:exported="true"
            android:syncable="true"
            android:enabled="true"
            android:label="Sync Contacts" />
    </application>
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
</manifest>
